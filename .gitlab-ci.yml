# image: node:alpine

# stages:

#   - install
#   - build
#   - deploy


# cache:
#   paths:
#     - node_modules/


# # 安装依赖

# install:

#   stage: install
#   only:
#     changes:
#       - package.json

#   # 执行脚本

#   script:
#     npm install


# # 打包项目

# build:

#   stage: build 
#   # only: master
#   script: 
#     - npm run build
#   artifacts: 
#     paths:
#         - dist/
# # 部署项目

# deploy:

#   stage: deploy
#   # only: master

#   script: 
#     # 清空网站根目录，目录请根据服务器实际情况填写

#     - rm -rf /opt/app/web/admin/*

#     # 复制打包后的文件至网站根目录，目录请根据服务器实际情况填写

#     - cp -rf ${CI_PROJECT_DIR}/dist/* /opt/app/web/admin/


# 能動的，但是怪怪的
# image: node:16.5.0
# stages:
#   # - install
#   # - build
#   - deploy
# pages:
#   stage: deploy
#   cache:
#     key:
#       files:
#         - package-lock.json
#       prefix: npm
#     paths:
#       - node_modules/
#   script:
#     - npm install
#     - npm run build
#     - cp -a dist/. public/

#     - ls .
#     - ls /

#     # - npm run dev
#     - docker build -t app/vue .
#     - docker run -d -p 8080:8080 --rm --name vuetest app/vue
#   artifacts:
#     paths:
#       - public
#   rules:
#     - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

# 不對 這變成讓LCT用docker裝一個docker
# image: docker
# services:
#   - docker:dind
# stages:
#   - deploy
# step-deploy-prod:
#   stage: deploy
#   script:
#     - docker build -t app/vue-demo .
#     - docker run -d -p 80:80 --rm --name todoapp app/vue-demo
    
stages:
  - install
  - test
  - build
  - push
  - deploy

### INSTALL ###
install_dependencies:
  image: node:gallium-alpine3.16
  stage: install
  script:
    - yarn install
  artifacts:
    paths:
      - node_modules/
    expire_in: 30 mins

### TEST ###
run_unit_tests:
  stage: test
  needs:
    - install_dependencies
  dependencies:
    - install_dependencies
  script:
    # - yarn test
    - echo "Running tests"
  artifacts:
    paths:
      - junit.xml
      - node_modules/
    reports:
      junit: junit.xml
    expire_in: 30 mins

### BUILD ###
run_build:
  image: node:gallium-alpine3.16
  stage: build
  needs:
    - run_unit_tests
  dependencies:
    - run_unit_tests
  only:
    - develop
    - /^v.(?:0|[1-9]\d*)\.(?:0|[1-9]\d*)\.(?:0|[1-9]\d*)(?:0|[a-z]*)$/
  script:
    - cp ${nginx} default.conf
    - >
      if [ $CI_COMMIT_BRANCH == "develop" ]; then
        echo 'Use develop .env'
        cp ${ENV_DEV} .env
      else
        echo 'Use master .env'
        cp ${ENV_PROD} .env
      fi
    - yarn build
  artifacts:
    paths:
      - .env
      - dist/
      - default.conf
      - docker-compose.yml
      - Dockerfile
    expire_in: 1 day

### DEPLOY TO DEVELOP ###
run_deploy_dev:
  image: docker/compose:latest
  stage: deploy
  needs:
    - run_build
  dependencies:
    - run_build
  variables:
    GIT_STRATEGY: none
  only:
    - develop
  tags:
    - develop
  script:
    - docker-compose down
    - docker-compose up -d --build

### DEPLOY TO PRODUCTION ###
run_deploy_prod:
  image: docker/compose:latest
  stage: deploy
  needs:
    - run_build
  dependencies:
    - run_build
  variables:
    GIT_STRATEGY: none
  only:
    - master
    - /^v.(?:0|[1-9]\d*)\.(?:0|[1-9]\d*)\.(?:0|[1-9]\d*)(?:0|[a-z]*)$/
  except:
    - branches
  script:
    - docker-compose down
    - docker-compose up -d --build
